/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.conekta.model

import io.conekta.model.ChargeRequest
import io.conekta.model.CheckoutRequest
import io.conekta.model.CustomerShippingContacts
import io.conekta.model.OrderDiscountLinesRequest
import io.conekta.model.OrderTaxRequest
import io.conekta.model.OrderUpdateFiscalEntityRequest
import io.conekta.model.OrderUpdateRequestCustomerInfo
import io.conekta.model.Product
import io.conekta.model.ShippingRequest

import com.google.gson.annotations.SerializedName

/**
 * a order
 *
 * @param charges 
 * @param checkout 
 * @param currency Currency with which the payment will be made. It uses the 3-letter code of the [International Standard ISO 4217.](https://es.wikipedia.org/wiki/ISO_4217)
 * @param customerInfo 
 * @param discountLines List of [discounts](https://developers.conekta.com/v2.1.0/reference/orderscreatediscountline) that are applied to the order. You must have at least one discount.
 * @param fiscalEntity 
 * @param lineItems List of [products](https://developers.conekta.com/v2.1.0/reference/orderscreateproduct) that are sold in the order. You must have at least one product.
 * @param metadata 
 * @param preAuthorize Indicates whether the order charges must be preauthorized
 * @param shippingContact 
 * @param shippingLines List of [shipping costs](https://developers.conekta.com/v2.1.0/reference/orderscreateshipping). If the online store offers digital products.
 * @param taxLines 
 */


data class OrderUpdateRequest (

    @SerializedName("charges")
    val charges: kotlin.collections.List<ChargeRequest>? = null,

    @SerializedName("checkout")
    val checkout: CheckoutRequest? = null,

    /* Currency with which the payment will be made. It uses the 3-letter code of the [International Standard ISO 4217.](https://es.wikipedia.org/wiki/ISO_4217) */
    @SerializedName("currency")
    val currency: kotlin.String? = null,

    @SerializedName("customer_info")
    val customerInfo: OrderUpdateRequestCustomerInfo? = null,

    /* List of [discounts](https://developers.conekta.com/v2.1.0/reference/orderscreatediscountline) that are applied to the order. You must have at least one discount. */
    @SerializedName("discount_lines")
    val discountLines: kotlin.collections.List<OrderDiscountLinesRequest>? = null,

    @SerializedName("fiscal_entity")
    val fiscalEntity: OrderUpdateFiscalEntityRequest? = null,

    /* List of [products](https://developers.conekta.com/v2.1.0/reference/orderscreateproduct) that are sold in the order. You must have at least one product. */
    @SerializedName("line_items")
    val lineItems: kotlin.collections.List<Product>? = null,

    @SerializedName("metadata")
    val metadata: kotlin.collections.Map<kotlin.String, kotlin.String>? = null,

    /* Indicates whether the order charges must be preauthorized */
    @SerializedName("pre_authorize")
    val preAuthorize: kotlin.Boolean? = false,

    @SerializedName("shipping_contact")
    val shippingContact: CustomerShippingContacts? = null,

    /* List of [shipping costs](https://developers.conekta.com/v2.1.0/reference/orderscreateshipping). If the online store offers digital products. */
    @SerializedName("shipping_lines")
    val shippingLines: kotlin.collections.List<ShippingRequest>? = null,

    @SerializedName("tax_lines")
    val taxLines: kotlin.collections.List<OrderTaxRequest>? = null

)

