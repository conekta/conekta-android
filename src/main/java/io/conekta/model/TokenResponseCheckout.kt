/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.conekta.model


import com.google.gson.annotations.SerializedName

/**
 * 
 *
 * @param allowedPaymentMethods 
 * @param canNotExpire Indicates if the checkout can not expire.
 * @param emailsSent 
 * @param excludeCardNetworks 
 * @param expiresAt Date and time when the checkout expires.
 * @param failureUrl URL to redirect the customer to if the payment process fails.
 * @param force3dsFlow Indicates if the checkout forces the 3DS flow.
 * @param id 
 * @param livemode 
 * @param metadata 
 * @param monthlyInstallmentsEnabled Indicates if the checkout allows monthly installments.
 * @param monthlyInstallmentsOptions List of monthly installments options.
 * @param name 
 * @param needsShippingContact 
 * @param `object` Indicates the type of object, in this case checkout.
 * @param onDemandEnabled Indicates if the checkout allows on demand payments.
 * @param paidPaymentsCount Number of payments that have been paid.
 * @param recurrent Indicates if the checkout is recurrent.
 * @param smsSent 
 * @param startsAt Date and time when the checkout starts.
 * @param status Status of the checkout.
 * @param successUrl URL to redirect the customer to after the payment process is completed.
 * @param type Type of checkout.
 */

@Deprecated(message = "This schema is deprecated.")

data class TokenResponseCheckout (

    @SerializedName("allowed_payment_methods")
    val allowedPaymentMethods: kotlin.collections.List<kotlin.String>? = null,

    /* Indicates if the checkout can not expire. */
    @SerializedName("can_not_expire")
    val canNotExpire: kotlin.Boolean? = null,

    @SerializedName("emails_sent")
    val emailsSent: kotlin.Int? = null,

    @SerializedName("exclude_card_networks")
    val excludeCardNetworks: kotlin.collections.List<kotlin.String>? = null,

    /* Date and time when the checkout expires. */
    @SerializedName("expires_at")
    val expiresAt: kotlin.Long? = null,

    /* URL to redirect the customer to if the payment process fails. */
    @SerializedName("failure_url")
    val failureUrl: kotlin.String? = null,

    /* Indicates if the checkout forces the 3DS flow. */
    @SerializedName("force_3ds_flow")
    val force3dsFlow: kotlin.Boolean? = null,

    @SerializedName("id")
    val id: kotlin.String? = null,

    @SerializedName("livemode")
    val livemode: kotlin.Boolean? = null,

    @SerializedName("metadata")
    val metadata: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    /* Indicates if the checkout allows monthly installments. */
    @SerializedName("monthly_installments_enabled")
    val monthlyInstallmentsEnabled: kotlin.Boolean? = null,

    /* List of monthly installments options. */
    @SerializedName("monthly_installments_options")
    val monthlyInstallmentsOptions: kotlin.collections.List<kotlin.Int>? = null,

    @SerializedName("name")
    val name: kotlin.String? = null,

    @SerializedName("needs_shipping_contact")
    val needsShippingContact: kotlin.Boolean? = null,

    /* Indicates the type of object, in this case checkout. */
    @SerializedName("object")
    val `object`: kotlin.String? = null,

    /* Indicates if the checkout allows on demand payments. */
    @SerializedName("on_demand_enabled")
    val onDemandEnabled: kotlin.Boolean? = null,

    /* Number of payments that have been paid. */
    @SerializedName("paid_payments_count")
    val paidPaymentsCount: kotlin.Int? = null,

    /* Indicates if the checkout is recurrent. */
    @SerializedName("recurrent")
    val recurrent: kotlin.Boolean? = null,

    @SerializedName("sms_sent")
    val smsSent: kotlin.Int? = null,

    /* Date and time when the checkout starts. */
    @SerializedName("starts_at")
    val startsAt: kotlin.Long? = null,

    /* Status of the checkout. */
    @SerializedName("status")
    val status: kotlin.String? = null,

    /* URL to redirect the customer to after the payment process is completed. */
    @SerializedName("success_url")
    val successUrl: kotlin.String? = null,

    /* Type of checkout. */
    @SerializedName("type")
    val type: kotlin.String? = null

)

