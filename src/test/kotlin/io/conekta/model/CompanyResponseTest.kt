/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.conekta.model

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.conekta.model.CompanyResponse
import io.conekta.model.CompanyFiscalInfoResponse
import io.conekta.model.CompanyPayoutDestinationResponse

class CompanyResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CompanyResponse
        //val modelInstance = CompanyResponse()

        // to test the property `id` - The child company's unique identifier
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `createdAt` - The resource's creation date (unix timestamp)
        should("test createdAt") {
            // uncomment below to test the property
            //modelInstance.createdAt shouldBe ("TODO")
        }

        // to test the property `name` - The child company's name
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property ``object`` - The resource's type
        should("test `object`") {
            // uncomment below to test the property
            //modelInstance.`object` shouldBe ("TODO")
        }

        // to test the property `parentCompanyId` - Id of the parent company
        should("test parentCompanyId") {
            // uncomment below to test the property
            //modelInstance.parentCompanyId shouldBe ("TODO")
        }

        // to test the property `useParentFiscalData` - Whether the parent company's fiscal data is to be used for liquidation and tax purposes
        should("test useParentFiscalData") {
            // uncomment below to test the property
            //modelInstance.useParentFiscalData shouldBe ("TODO")
        }

        // to test the property `payoutDestination`
        should("test payoutDestination") {
            // uncomment below to test the property
            //modelInstance.payoutDestination shouldBe ("TODO")
        }

        // to test the property `fiscalInfo`
        should("test fiscalInfo") {
            // uncomment below to test the property
            //modelInstance.fiscalInfo shouldBe ("TODO")
        }

    }
}
