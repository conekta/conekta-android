/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.conekta.model

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.conekta.model.Customer
import io.conekta.model.CustomerAntifraudInfo
import io.conekta.model.CustomerFiscalEntitiesRequest
import io.conekta.model.CustomerPaymentMethodsRequest
import io.conekta.model.CustomerShippingContacts
import io.conekta.model.SubscriptionRequest

class CustomerTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of Customer
        //val modelInstance = Customer()

        // to test the property `email` - An email address is a series of customizable characters followed by a universal Internet symbol, the at symbol (@), the name of a host server, and a web domain ending (.mx, .com, .org, . net, etc).
        should("test email") {
            // uncomment below to test the property
            //modelInstance.email shouldBe ("TODO")
        }

        // to test the property `name` - Client's name
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `phone` - Is the customer's phone number
        should("test phone") {
            // uncomment below to test the property
            //modelInstance.phone shouldBe ("TODO")
        }

        // to test the property `antifraudInfo`
        should("test antifraudInfo") {
            // uncomment below to test the property
            //modelInstance.antifraudInfo shouldBe ("TODO")
        }

        // to test the property `corporate` - It is a value that allows identifying if the email is corporate or not.
        should("test corporate") {
            // uncomment below to test the property
            //modelInstance.corporate shouldBe ("TODO")
        }

        // to test the property `customReference` - It is an undefined value.
        should("test customReference") {
            // uncomment below to test the property
            //modelInstance.customReference shouldBe ("TODO")
        }

        // to test the property `defaultPaymentSourceId` - It is a parameter that allows to identify in the response, the Conekta ID of a payment method (payment_id)
        should("test defaultPaymentSourceId") {
            // uncomment below to test the property
            //modelInstance.defaultPaymentSourceId shouldBe ("TODO")
        }

        // to test the property `defaultShippingContactId` - It is a parameter that allows to identify in the response, the Conekta ID of the shipping address (shipping_contact)
        should("test defaultShippingContactId") {
            // uncomment below to test the property
            //modelInstance.defaultShippingContactId shouldBe ("TODO")
        }

        // to test the property `fiscalEntities`
        should("test fiscalEntities") {
            // uncomment below to test the property
            //modelInstance.fiscalEntities shouldBe ("TODO")
        }

        // to test the property `metadata`
        should("test metadata") {
            // uncomment below to test the property
            //modelInstance.metadata shouldBe ("TODO")
        }

        // to test the property `paymentSources` - Contains details of the payment methods that the customer has active or has used in Conekta
        should("test paymentSources") {
            // uncomment below to test the property
            //modelInstance.paymentSources shouldBe ("TODO")
        }

        // to test the property `planId` - Contains the ID of a plan, which could together with name, email and phone create a client directly to a subscription
        should("test planId") {
            // uncomment below to test the property
            //modelInstance.planId shouldBe ("TODO")
        }

        // to test the property `shippingContacts` - Contains the detail of the shipping addresses that the client has active or has used in Conekta
        should("test shippingContacts") {
            // uncomment below to test the property
            //modelInstance.shippingContacts shouldBe ("TODO")
        }

        // to test the property `subscription`
        should("test subscription") {
            // uncomment below to test the property
            //modelInstance.subscription shouldBe ("TODO")
        }

    }
}
