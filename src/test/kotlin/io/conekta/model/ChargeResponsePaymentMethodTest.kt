/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.conekta.model

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.conekta.model.ChargeResponsePaymentMethod
import io.conekta.model.PaymentMethodBankTransfer
import io.conekta.model.PaymentMethodCard
import io.conekta.model.PaymentMethodCash

class ChargeResponsePaymentMethodTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ChargeResponsePaymentMethod
        //val modelInstance = ChargeResponsePaymentMethod()

        // to test the property ``object``
        should("test `object`") {
            // uncomment below to test the property
            //modelInstance.`object` shouldBe ("TODO")
        }

        // to test the property `type`
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `authCode`
        should("test authCode") {
            // uncomment below to test the property
            //modelInstance.authCode shouldBe ("TODO")
        }

        // to test the property `cashierId`
        should("test cashierId") {
            // uncomment below to test the property
            //modelInstance.cashierId shouldBe ("TODO")
        }

        // to test the property `reference`
        should("test reference") {
            // uncomment below to test the property
            //modelInstance.reference shouldBe ("TODO")
        }

        // to test the property `barcodeUrl`
        should("test barcodeUrl") {
            // uncomment below to test the property
            //modelInstance.barcodeUrl shouldBe ("TODO")
        }

        // to test the property `expiresAt`
        should("test expiresAt") {
            // uncomment below to test the property
            //modelInstance.expiresAt shouldBe ("TODO")
        }

        // to test the property `serviceName`
        should("test serviceName") {
            // uncomment below to test the property
            //modelInstance.serviceName shouldBe ("TODO")
        }

        // to test the property `store`
        should("test store") {
            // uncomment below to test the property
            //modelInstance.store shouldBe ("TODO")
        }

        // to test the property `storeName`
        should("test storeName") {
            // uncomment below to test the property
            //modelInstance.storeName shouldBe ("TODO")
        }

        // to test the property `accountType` - Account type of the card
        should("test accountType") {
            // uncomment below to test the property
            //modelInstance.accountType shouldBe ("TODO")
        }

        // to test the property `brand` - Brand of the card
        should("test brand") {
            // uncomment below to test the property
            //modelInstance.brand shouldBe ("TODO")
        }

        // to test the property `contractId` - Id sent for recurrent charges.
        should("test contractId") {
            // uncomment below to test the property
            //modelInstance.contractId shouldBe ("TODO")
        }

        // to test the property `country` - Country of the card
        should("test country") {
            // uncomment below to test the property
            //modelInstance.country shouldBe ("TODO")
        }

        // to test the property `expMonth` - Expiration month of the card
        should("test expMonth") {
            // uncomment below to test the property
            //modelInstance.expMonth shouldBe ("TODO")
        }

        // to test the property `expYear` - Expiration year of the card
        should("test expYear") {
            // uncomment below to test the property
            //modelInstance.expYear shouldBe ("TODO")
        }

        // to test the property `fraudIndicators`
        should("test fraudIndicators") {
            // uncomment below to test the property
            //modelInstance.fraudIndicators shouldBe ("TODO")
        }

        // to test the property `issuer` - Issuer of the card
        should("test issuer") {
            // uncomment below to test the property
            //modelInstance.issuer shouldBe ("TODO")
        }

        // to test the property `last4` - Last 4 digits of the card
        should("test last4") {
            // uncomment below to test the property
            //modelInstance.last4 shouldBe ("TODO")
        }

        // to test the property `name` - Name of the cardholder
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `bank`
        should("test bank") {
            // uncomment below to test the property
            //modelInstance.bank shouldBe ("TODO")
        }

        // to test the property `clabe`
        should("test clabe") {
            // uncomment below to test the property
            //modelInstance.clabe shouldBe ("TODO")
        }

        // to test the property `description`
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `executedAt`
        should("test executedAt") {
            // uncomment below to test the property
            //modelInstance.executedAt shouldBe ("TODO")
        }

        // to test the property `issuingAccountBank`
        should("test issuingAccountBank") {
            // uncomment below to test the property
            //modelInstance.issuingAccountBank shouldBe ("TODO")
        }

        // to test the property `issuingAccountNumber`
        should("test issuingAccountNumber") {
            // uncomment below to test the property
            //modelInstance.issuingAccountNumber shouldBe ("TODO")
        }

        // to test the property `issuingAccountHolderName`
        should("test issuingAccountHolderName") {
            // uncomment below to test the property
            //modelInstance.issuingAccountHolderName shouldBe ("TODO")
        }

        // to test the property `issuingAccountTaxId`
        should("test issuingAccountTaxId") {
            // uncomment below to test the property
            //modelInstance.issuingAccountTaxId shouldBe ("TODO")
        }

        // to test the property `paymentAttempts`
        should("test paymentAttempts") {
            // uncomment below to test the property
            //modelInstance.paymentAttempts shouldBe ("TODO")
        }

        // to test the property `receivingAccountHolderName`
        should("test receivingAccountHolderName") {
            // uncomment below to test the property
            //modelInstance.receivingAccountHolderName shouldBe ("TODO")
        }

        // to test the property `receivingAccountNumber`
        should("test receivingAccountNumber") {
            // uncomment below to test the property
            //modelInstance.receivingAccountNumber shouldBe ("TODO")
        }

        // to test the property `receivingAccountBank`
        should("test receivingAccountBank") {
            // uncomment below to test the property
            //modelInstance.receivingAccountBank shouldBe ("TODO")
        }

        // to test the property `receivingAccountTaxId`
        should("test receivingAccountTaxId") {
            // uncomment below to test the property
            //modelInstance.receivingAccountTaxId shouldBe ("TODO")
        }

        // to test the property `referenceNumber`
        should("test referenceNumber") {
            // uncomment below to test the property
            //modelInstance.referenceNumber shouldBe ("TODO")
        }

        // to test the property `trackingCode`
        should("test trackingCode") {
            // uncomment below to test the property
            //modelInstance.trackingCode shouldBe ("TODO")
        }

    }
}
