/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.conekta.model

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.conekta.model.CheckoutResponse

class CheckoutResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CheckoutResponse
        //val modelInstance = CheckoutResponse()

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `livemode`
        should("test livemode") {
            // uncomment below to test the property
            //modelInstance.livemode shouldBe ("TODO")
        }

        // to test the property `name` - Reason for charge
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property ``object``
        should("test `object`") {
            // uncomment below to test the property
            //modelInstance.`object` shouldBe ("TODO")
        }

        // to test the property `allowedPaymentMethods`
        should("test allowedPaymentMethods") {
            // uncomment below to test the property
            //modelInstance.allowedPaymentMethods shouldBe ("TODO")
        }

        // to test the property `canNotExpire`
        should("test canNotExpire") {
            // uncomment below to test the property
            //modelInstance.canNotExpire shouldBe ("TODO")
        }

        // to test the property `emailsSent`
        should("test emailsSent") {
            // uncomment below to test the property
            //modelInstance.emailsSent shouldBe ("TODO")
        }

        // to test the property `excludeCardNetworks`
        should("test excludeCardNetworks") {
            // uncomment below to test the property
            //modelInstance.excludeCardNetworks shouldBe ("TODO")
        }

        // to test the property `expiresAt`
        should("test expiresAt") {
            // uncomment below to test the property
            //modelInstance.expiresAt shouldBe ("TODO")
        }

        // to test the property `failureUrl`
        should("test failureUrl") {
            // uncomment below to test the property
            //modelInstance.failureUrl shouldBe ("TODO")
        }

        // to test the property `force3dsFlow`
        should("test force3dsFlow") {
            // uncomment below to test the property
            //modelInstance.force3dsFlow shouldBe ("TODO")
        }

        // to test the property `metadata`
        should("test metadata") {
            // uncomment below to test the property
            //modelInstance.metadata shouldBe ("TODO")
        }

        // to test the property `monthlyInstallmentsEnabled`
        should("test monthlyInstallmentsEnabled") {
            // uncomment below to test the property
            //modelInstance.monthlyInstallmentsEnabled shouldBe ("TODO")
        }

        // to test the property `monthlyInstallmentsOptions`
        should("test monthlyInstallmentsOptions") {
            // uncomment below to test the property
            //modelInstance.monthlyInstallmentsOptions shouldBe ("TODO")
        }

        // to test the property `needsShippingContact`
        should("test needsShippingContact") {
            // uncomment below to test the property
            //modelInstance.needsShippingContact shouldBe ("TODO")
        }

        // to test the property `paidPaymentsCount`
        should("test paidPaymentsCount") {
            // uncomment below to test the property
            //modelInstance.paidPaymentsCount shouldBe ("TODO")
        }

        // to test the property `paymentsLimitCount`
        should("test paymentsLimitCount") {
            // uncomment below to test the property
            //modelInstance.paymentsLimitCount shouldBe ("TODO")
        }

        // to test the property `recurrent`
        should("test recurrent") {
            // uncomment below to test the property
            //modelInstance.recurrent shouldBe ("TODO")
        }

        // to test the property `slug`
        should("test slug") {
            // uncomment below to test the property
            //modelInstance.slug shouldBe ("TODO")
        }

        // to test the property `smsSent`
        should("test smsSent") {
            // uncomment below to test the property
            //modelInstance.smsSent shouldBe ("TODO")
        }

        // to test the property `startsAt`
        should("test startsAt") {
            // uncomment below to test the property
            //modelInstance.startsAt shouldBe ("TODO")
        }

        // to test the property `status`
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `successUrl`
        should("test successUrl") {
            // uncomment below to test the property
            //modelInstance.successUrl shouldBe ("TODO")
        }

        // to test the property `type`
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `url`
        should("test url") {
            // uncomment below to test the property
            //modelInstance.url shouldBe ("TODO")
        }

    }
}
