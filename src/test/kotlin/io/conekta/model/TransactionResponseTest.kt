/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.conekta.model

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.conekta.model.TransactionResponse

class TransactionResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of TransactionResponse
        //val modelInstance = TransactionResponse()

        // to test the property `amount` - The amount of the transaction.
        should("test amount") {
            // uncomment below to test the property
            //modelInstance.amount shouldBe ("TODO")
        }

        // to test the property `charge` - Randomly assigned unique order identifier associated with the charge.
        should("test charge") {
            // uncomment below to test the property
            //modelInstance.charge shouldBe ("TODO")
        }

        // to test the property `createdAt` - Date and time of creation of the transaction in Unix format.
        should("test createdAt") {
            // uncomment below to test the property
            //modelInstance.createdAt shouldBe ("TODO")
        }

        // to test the property `currency` - The currency of the transaction. It uses the 3-letter code of the [International Standard ISO 4217.](https://es.wikipedia.org/wiki/ISO_4217)
        should("test currency") {
            // uncomment below to test the property
            //modelInstance.currency shouldBe ("TODO")
        }

        // to test the property `fee` - The amount to be deducted for taxes and commissions.
        should("test fee") {
            // uncomment below to test the property
            //modelInstance.fee shouldBe ("TODO")
        }

        // to test the property `id` - Unique identifier of the transaction.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `livemode` - Indicates whether the transaction was created in live mode or test mode.
        should("test livemode") {
            // uncomment below to test the property
            //modelInstance.livemode shouldBe ("TODO")
        }

        // to test the property `net` - The net amount after deducting commissions and taxes.
        should("test net") {
            // uncomment below to test the property
            //modelInstance.net shouldBe ("TODO")
        }

        // to test the property ``object`` - Object name, which is transaction.
        should("test `object`") {
            // uncomment below to test the property
            //modelInstance.`object` shouldBe ("TODO")
        }

        // to test the property `status` - Code indicating transaction status.
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `type` - Transaction Type
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

    }
}
