/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.conekta.model

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.conekta.model.PayoutOrderResponse
import io.conekta.model.PayoutOrderPayoutsItem
import io.conekta.model.PayoutOrderResponseCustomerInfo

class PayoutOrderResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PayoutOrderResponse
        //val modelInstance = PayoutOrderResponse()

        // to test the property `allowedPayoutMethods` - The payout methods that are allowed for the payout order.
        should("test allowedPayoutMethods") {
            // uncomment below to test the property
            //modelInstance.allowedPayoutMethods shouldBe ("TODO")
        }

        // to test the property `amount` - The amount of the payout order.
        should("test amount") {
            // uncomment below to test the property
            //modelInstance.amount shouldBe ("TODO")
        }

        // to test the property `createdAt` - The creation date of the payout order.
        should("test createdAt") {
            // uncomment below to test the property
            //modelInstance.createdAt shouldBe ("TODO")
        }

        // to test the property `currency` - The currency in which the payout order is made.
        should("test currency") {
            // uncomment below to test the property
            //modelInstance.currency shouldBe ("TODO")
        }

        // to test the property `customerInfo`
        should("test customerInfo") {
            // uncomment below to test the property
            //modelInstance.customerInfo shouldBe ("TODO")
        }

        // to test the property `id` - The id of the payout order.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `livemode` - The live mode of the payout order.
        should("test livemode") {
            // uncomment below to test the property
            //modelInstance.livemode shouldBe ("TODO")
        }

        // to test the property ``object`` - The object of the payout order.
        should("test `object`") {
            // uncomment below to test the property
            //modelInstance.`object` shouldBe ("TODO")
        }

        // to test the property `payouts` - The payout information of the payout order.
        should("test payouts") {
            // uncomment below to test the property
            //modelInstance.payouts shouldBe ("TODO")
        }

        // to test the property `reason` - The reason for the payout order.
        should("test reason") {
            // uncomment below to test the property
            //modelInstance.reason shouldBe ("TODO")
        }

        // to test the property `updatedAt` - The update date of the payout order.
        should("test updatedAt") {
            // uncomment below to test the property
            //modelInstance.updatedAt shouldBe ("TODO")
        }

        // to test the property `expiresAt` - The expiration date of the payout order.
        should("test expiresAt") {
            // uncomment below to test the property
            //modelInstance.expiresAt shouldBe ("TODO")
        }

        // to test the property `metadata` - The metadata of the payout order.
        should("test metadata") {
            // uncomment below to test the property
            //modelInstance.metadata shouldBe ("TODO")
        }

        // to test the property `status` - The status of the payout order.
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

    }
}
