/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.conekta

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.conekta.SubscriptionsApi
import io.conekta.model.Error
import io.conekta.model.SubscriptionEventsResponse
import io.conekta.model.SubscriptionRequest
import io.conekta.model.SubscriptionResponse
import io.conekta.model.SubscriptionUpdateRequest

class SubscriptionsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SubscriptionsApi
        //val apiInstance = SubscriptionsApi()

        // to test cancelSubscription
        should("test cancelSubscription") {
            // uncomment below to test cancelSubscription
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : SubscriptionResponse = apiInstance.cancelSubscription(id, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test createSubscription
        should("test createSubscription") {
            // uncomment below to test createSubscription
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val subscriptionRequest : SubscriptionRequest =  // SubscriptionRequest | requested field for subscriptions
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : SubscriptionResponse = apiInstance.createSubscription(id, subscriptionRequest, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test getAllEventsFromSubscription
        should("test getAllEventsFromSubscription") {
            // uncomment below to test getAllEventsFromSubscription
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : SubscriptionEventsResponse = apiInstance.getAllEventsFromSubscription(id, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test getSubscription
        should("test getSubscription") {
            // uncomment below to test getSubscription
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val result : SubscriptionResponse = apiInstance.getSubscription(id, acceptLanguage)
            //result shouldBe ("TODO")
        }

        // to test pauseSubscription
        should("test pauseSubscription") {
            // uncomment below to test pauseSubscription
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : SubscriptionResponse = apiInstance.pauseSubscription(id, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test resumeSubscription
        should("test resumeSubscription") {
            // uncomment below to test resumeSubscription
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : SubscriptionResponse = apiInstance.resumeSubscription(id, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test updateSubscription
        should("test updateSubscription") {
            // uncomment below to test updateSubscription
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val subscriptionUpdateRequest : SubscriptionUpdateRequest =  // SubscriptionUpdateRequest | requested field for update a subscription
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : SubscriptionResponse = apiInstance.updateSubscription(id, subscriptionUpdateRequest, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

    }
}
