/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.conekta

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.conekta.AntifraudApi
import io.conekta.model.BlacklistRuleResponse
import io.conekta.model.CreateRiskRulesData
import io.conekta.model.DeletedBlacklistRuleResponse
import io.conekta.model.DeletedWhitelistRuleResponse
import io.conekta.model.Error
import io.conekta.model.RiskRulesList
import io.conekta.model.WhitelistlistRuleResponse

class AntifraudApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AntifraudApi
        //val apiInstance = AntifraudApi()

        // to test createRuleBlacklist
        should("test createRuleBlacklist") {
            // uncomment below to test createRuleBlacklist
            //val createRiskRulesData : CreateRiskRulesData =  // CreateRiskRulesData | requested field for blacklist rule
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val result : BlacklistRuleResponse = apiInstance.createRuleBlacklist(createRiskRulesData, acceptLanguage)
            //result shouldBe ("TODO")
        }

        // to test createRuleWhitelist
        should("test createRuleWhitelist") {
            // uncomment below to test createRuleWhitelist
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val createRiskRulesData : CreateRiskRulesData =  // CreateRiskRulesData | 
            //val result : WhitelistlistRuleResponse = apiInstance.createRuleWhitelist(acceptLanguage, createRiskRulesData)
            //result shouldBe ("TODO")
        }

        // to test deleteRuleBlacklist
        should("test deleteRuleBlacklist") {
            // uncomment below to test deleteRuleBlacklist
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : DeletedBlacklistRuleResponse = apiInstance.deleteRuleBlacklist(id, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test deleteRuleWhitelist
        should("test deleteRuleWhitelist") {
            // uncomment below to test deleteRuleWhitelist
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : DeletedWhitelistRuleResponse = apiInstance.deleteRuleWhitelist(id, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test getRuleBlacklist
        should("test getRuleBlacklist") {
            // uncomment below to test getRuleBlacklist
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val result : RiskRulesList = apiInstance.getRuleBlacklist(acceptLanguage)
            //result shouldBe ("TODO")
        }

        // to test getRuleWhitelist
        should("test getRuleWhitelist") {
            // uncomment below to test getRuleWhitelist
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val result : RiskRulesList = apiInstance.getRuleWhitelist(acceptLanguage)
            //result shouldBe ("TODO")
        }

    }
}
