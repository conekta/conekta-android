/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.conekta

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.conekta.PlansApi
import io.conekta.model.Error
import io.conekta.model.GetPlansResponse
import io.conekta.model.PlanRequest
import io.conekta.model.PlanResponse
import io.conekta.model.PlanUpdateRequest

class PlansApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PlansApi
        //val apiInstance = PlansApi()

        // to test createPlan
        should("test createPlan") {
            // uncomment below to test createPlan
            //val planRequest : PlanRequest =  // PlanRequest | requested field for plan
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : PlanResponse = apiInstance.createPlan(planRequest, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test deletePlan
        should("test deletePlan") {
            // uncomment below to test deletePlan
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val result : PlanResponse = apiInstance.deletePlan(id, acceptLanguage)
            //result shouldBe ("TODO")
        }

        // to test getPlan
        should("test getPlan") {
            // uncomment below to test getPlan
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : PlanResponse = apiInstance.getPlan(id, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test getPlans
        should("test getPlans") {
            // uncomment below to test getPlans
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val limit : kotlin.Int = 56 // kotlin.Int | The numbers of items to return, the maximum value is 250
            //val search : kotlin.String = search_example // kotlin.String | General order search, e.g. by mail, reference etc.
            //val next : kotlin.String = next_example // kotlin.String | next page
            //val previous : kotlin.String = previous_example // kotlin.String | previous page
            //val result : GetPlansResponse = apiInstance.getPlans(acceptLanguage, xChildCompanyId, limit, search, next, previous)
            //result shouldBe ("TODO")
        }

        // to test updatePlan
        should("test updatePlan") {
            // uncomment below to test updatePlan
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val planUpdateRequest : PlanUpdateRequest =  // PlanUpdateRequest | requested field for plan
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : PlanResponse = apiInstance.updatePlan(id, planUpdateRequest, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

    }
}
