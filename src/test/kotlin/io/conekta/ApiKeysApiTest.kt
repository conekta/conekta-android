/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.conekta

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.conekta.ApiKeysApi
import io.conekta.model.ApiKeyCreateResponse
import io.conekta.model.ApiKeyRequest
import io.conekta.model.ApiKeyResponse
import io.conekta.model.ApiKeyUpdateRequest
import io.conekta.model.DeleteApiKeysResponse
import io.conekta.model.Error
import io.conekta.model.GetApiKeysResponse

class ApiKeysApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ApiKeysApi
        //val apiInstance = ApiKeysApi()

        // to test createApiKey
        should("test createApiKey") {
            // uncomment below to test createApiKey
            //val apiKeyRequest : ApiKeyRequest =  // ApiKeyRequest | requested field for a api keys
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : ApiKeyCreateResponse = apiInstance.createApiKey(apiKeyRequest, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test deleteApiKey
        should("test deleteApiKey") {
            // uncomment below to test deleteApiKey
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val result : DeleteApiKeysResponse = apiInstance.deleteApiKey(id, acceptLanguage)
            //result shouldBe ("TODO")
        }

        // to test getApiKey
        should("test getApiKey") {
            // uncomment below to test getApiKey
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : ApiKeyResponse = apiInstance.getApiKey(id, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test getApiKeys
        should("test getApiKeys") {
            // uncomment below to test getApiKeys
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val limit : kotlin.Int = 56 // kotlin.Int | The numbers of items to return, the maximum value is 250
            //val next : kotlin.String = next_example // kotlin.String | next page
            //val previous : kotlin.String = previous_example // kotlin.String | previous page
            //val search : kotlin.String = search_example // kotlin.String | General search, e.g. by id, description, prefix
            //val result : GetApiKeysResponse = apiInstance.getApiKeys(acceptLanguage, xChildCompanyId, limit, next, previous, search)
            //result shouldBe ("TODO")
        }

        // to test updateApiKey
        should("test updateApiKey") {
            // uncomment below to test updateApiKey
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val apiKeyUpdateRequest : ApiKeyUpdateRequest =  // ApiKeyUpdateRequest | 
            //val result : ApiKeyResponse = apiInstance.updateApiKey(id, acceptLanguage, apiKeyUpdateRequest)
            //result shouldBe ("TODO")
        }

    }
}
