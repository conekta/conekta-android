/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.conekta

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.conekta.OrdersApi
import io.conekta.model.Error
import io.conekta.model.GetOrdersResponse
import io.conekta.model.OrderCaptureRequest
import io.conekta.model.OrderRefundRequest
import io.conekta.model.OrderRequest
import io.conekta.model.OrderResponse
import io.conekta.model.OrderUpdateRequest

class OrdersApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of OrdersApi
        //val apiInstance = OrdersApi()

        // to test cancelOrder
        should("test cancelOrder") {
            // uncomment below to test cancelOrder
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : OrderResponse = apiInstance.cancelOrder(id, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test createOrder
        should("test createOrder") {
            // uncomment below to test createOrder
            //val orderRequest : OrderRequest =  // OrderRequest | requested field for order
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : OrderResponse = apiInstance.createOrder(orderRequest, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test getOrderById
        should("test getOrderById") {
            // uncomment below to test getOrderById
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : OrderResponse = apiInstance.getOrderById(id, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test getOrders
        should("test getOrders") {
            // uncomment below to test getOrders
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val limit : kotlin.Int = 56 // kotlin.Int | The numbers of items to return, the maximum value is 250
            //val search : kotlin.String = search_example // kotlin.String | General order search, e.g. by mail, reference etc.
            //val next : kotlin.String = next_example // kotlin.String | next page
            //val previous : kotlin.String = previous_example // kotlin.String | previous page
            //val paymentStatus : kotlin.String = paid // kotlin.String | Filters by order status
            //val lastPaymentInfoStatus : kotlin.String = pending_payment // kotlin.String | Filters by last payment info status
            //val createdAt : kotlin.Long = 1612137600 // kotlin.Long | created equal to
            //val createdAtGte : kotlin.Long = 1612137600 // kotlin.Long | created at greater than or equal to
            //val createdAtLte : kotlin.Long = 1612137600 // kotlin.Long | created at less than or equal to
            //val updatedAtGte : kotlin.Long = 1612137600 // kotlin.Long | updated at greater than or equal to
            //val updatedAtLte : kotlin.Long = 1612137600 // kotlin.Long | updated at less than or equal to
            //val result : GetOrdersResponse = apiInstance.getOrders(acceptLanguage, xChildCompanyId, limit, search, next, previous, paymentStatus, lastPaymentInfoStatus, createdAt, createdAtGte, createdAtLte, updatedAtGte, updatedAtLte)
            //result shouldBe ("TODO")
        }

        // to test orderCancelRefund
        should("test orderCancelRefund") {
            // uncomment below to test orderCancelRefund
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val refundId : kotlin.String = 6407b5bee1329a000175ba11 // kotlin.String | refund identifier
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : OrderResponse = apiInstance.orderCancelRefund(id, refundId, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test orderRefund
        should("test orderRefund") {
            // uncomment below to test orderRefund
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val orderRefundRequest : OrderRefundRequest =  // OrderRefundRequest | requested field for a refund
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : OrderResponse = apiInstance.orderRefund(id, orderRefundRequest, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test ordersCreateCapture
        should("test ordersCreateCapture") {
            // uncomment below to test ordersCreateCapture
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val orderCaptureRequest : OrderCaptureRequest =  // OrderCaptureRequest | requested fields for capture order
            //val result : OrderResponse = apiInstance.ordersCreateCapture(id, acceptLanguage, xChildCompanyId, orderCaptureRequest)
            //result shouldBe ("TODO")
        }

        // to test updateOrder
        should("test updateOrder") {
            // uncomment below to test updateOrder
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val orderUpdateRequest : OrderUpdateRequest =  // OrderUpdateRequest | requested field for an order
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val result : OrderResponse = apiInstance.updateOrder(id, orderUpdateRequest, acceptLanguage)
            //result shouldBe ("TODO")
        }

    }
}
