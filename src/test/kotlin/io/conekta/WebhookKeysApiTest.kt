/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.conekta

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.conekta.WebhookKeysApi
import io.conekta.model.Error
import io.conekta.model.GetWebhookKeysResponse
import io.conekta.model.WebhookKeyCreateResponse
import io.conekta.model.WebhookKeyDeleteResponse
import io.conekta.model.WebhookKeyRequest
import io.conekta.model.WebhookKeyResponse
import io.conekta.model.WebhookKeyUpdateRequest

class WebhookKeysApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of WebhookKeysApi
        //val apiInstance = WebhookKeysApi()

        // to test createWebhookKey
        should("test createWebhookKey") {
            // uncomment below to test createWebhookKey
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val webhookKeyRequest : WebhookKeyRequest =  // WebhookKeyRequest | 
            //val result : WebhookKeyCreateResponse = apiInstance.createWebhookKey(acceptLanguage, webhookKeyRequest)
            //result shouldBe ("TODO")
        }

        // to test deleteWebhookKey
        should("test deleteWebhookKey") {
            // uncomment below to test deleteWebhookKey
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val result : WebhookKeyDeleteResponse = apiInstance.deleteWebhookKey(id, acceptLanguage)
            //result shouldBe ("TODO")
        }

        // to test getWebhookKey
        should("test getWebhookKey") {
            // uncomment below to test getWebhookKey
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : WebhookKeyResponse = apiInstance.getWebhookKey(id, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test getWebhookKeys
        should("test getWebhookKeys") {
            // uncomment below to test getWebhookKeys
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val limit : kotlin.Int = 56 // kotlin.Int | The numbers of items to return, the maximum value is 250
            //val search : kotlin.String = search_example // kotlin.String | General order search, e.g. by mail, reference etc.
            //val next : kotlin.String = next_example // kotlin.String | next page
            //val previous : kotlin.String = previous_example // kotlin.String | previous page
            //val result : GetWebhookKeysResponse = apiInstance.getWebhookKeys(acceptLanguage, xChildCompanyId, limit, search, next, previous)
            //result shouldBe ("TODO")
        }

        // to test updateWebhookKey
        should("test updateWebhookKey") {
            // uncomment below to test updateWebhookKey
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val webhookKeyUpdateRequest : WebhookKeyUpdateRequest =  // WebhookKeyUpdateRequest | 
            //val result : WebhookKeyResponse = apiInstance.updateWebhookKey(id, acceptLanguage, webhookKeyUpdateRequest)
            //result shouldBe ("TODO")
        }

    }
}
