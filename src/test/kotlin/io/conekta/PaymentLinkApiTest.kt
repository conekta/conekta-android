/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.conekta

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.conekta.PaymentLinkApi
import io.conekta.model.Checkout
import io.conekta.model.CheckoutResponse
import io.conekta.model.CheckoutsResponse
import io.conekta.model.EmailCheckoutRequest
import io.conekta.model.Error
import io.conekta.model.SmsCheckoutRequest

class PaymentLinkApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PaymentLinkApi
        //val apiInstance = PaymentLinkApi()

        // to test cancelCheckout
        should("test cancelCheckout") {
            // uncomment below to test cancelCheckout
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : CheckoutResponse = apiInstance.cancelCheckout(id, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test createCheckout
        should("test createCheckout") {
            // uncomment below to test createCheckout
            //val checkout : Checkout =  // Checkout | requested field for checkout
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : CheckoutResponse = apiInstance.createCheckout(checkout, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test emailCheckout
        should("test emailCheckout") {
            // uncomment below to test emailCheckout
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val emailCheckoutRequest : EmailCheckoutRequest =  // EmailCheckoutRequest | requested field for sms checkout
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : CheckoutResponse = apiInstance.emailCheckout(id, emailCheckoutRequest, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test getCheckout
        should("test getCheckout") {
            // uncomment below to test getCheckout
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : CheckoutResponse = apiInstance.getCheckout(id, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

        // to test getCheckouts
        should("test getCheckouts") {
            // uncomment below to test getCheckouts
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val limit : kotlin.Int = 56 // kotlin.Int | The numbers of items to return, the maximum value is 250
            //val search : kotlin.String = search_example // kotlin.String | General order search, e.g. by mail, reference etc.
            //val next : kotlin.String = next_example // kotlin.String | next page
            //val previous : kotlin.String = previous_example // kotlin.String | previous page
            //val result : CheckoutsResponse = apiInstance.getCheckouts(acceptLanguage, xChildCompanyId, limit, search, next, previous)
            //result shouldBe ("TODO")
        }

        // to test smsCheckout
        should("test smsCheckout") {
            // uncomment below to test smsCheckout
            //val id : kotlin.String = 6307a60c41de27127515a575 // kotlin.String | Identifier of the resource
            //val smsCheckoutRequest : SmsCheckoutRequest =  // SmsCheckoutRequest | requested field for sms checkout
            //val acceptLanguage : kotlin.String = es // kotlin.String | Use for knowing which language to use
            //val xChildCompanyId : kotlin.String = 6441b6376b60c3a638da80af // kotlin.String | In the case of a holding company, the company id of the child company to which will process the request.
            //val result : CheckoutResponse = apiInstance.smsCheckout(id, smsCheckoutRequest, acceptLanguage, xChildCompanyId)
            //result shouldBe ("TODO")
        }

    }
}
